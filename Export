import streamlit as st
import pandas as pd
import io

# --- Load your processed StatsBomb data ---
# Adjust the path if needed
DATA_PATH = "data/processed/players_combined.csv"
try:
    df = pd.read_csv(DATA_PATH)
except FileNotFoundError:
    st.error(f"File not found: {DATA_PATH}")
    st.stop()

# --- UI for League and Position selection ---
st.header("Export All Players by League & Position (StatsBomb)")

leagues = sorted(df['League'].dropna().unique())
positions = sorted(df['Position'].dropna().unique())

selected_league = st.selectbox("Select League", leagues)
selected_position = st.selectbox("Select Position", positions)

# --- Filter DataFrame ---
filtered = df[(df['League'] == selected_league) & (df['Position'] == selected_position)]

# --- Show and Export Table ---
if not filtered.empty:
    # Show all columns, or select a subset if you want
    st.dataframe(filtered)

    # Download as Excel
    excel_buffer = io.BytesIO()
    with pd.ExcelWriter(excel_buffer, engine='xlsxwriter') as writer:
        filtered.to_excel(writer, index=False, sheet_name='Players')
        writer.save()
    excel_buffer.seek(0)
    st.download_button(
        label="Download as Excel",
        data=excel_buffer,
        file_name=f"{selected_league}_{selected_position}_players.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )

    # Download as CSV
    csv = filtered.to_csv(index=False)
    st.download_button(
        label="Download as CSV",
        data=csv,
        file_name=f"{selected_league}_{selected_position}_players.csv",
        mime="text/csv"
    )
else:
    st.warning("No players found for this league and position.")
